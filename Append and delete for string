You have two strings of lowercase English letters. You can perform two types of operations on the first string:

1. Append a lowercase English letter to the end of the string.

2. Delete the last character of the string. Performing this operation on an empty string results in an empty string.

Given an integer. k. and two strings, s and t, determine whether or not you can T convert s to t by performing exactly k of the above operations on s. If it's possible. print Yes. Otherwise, print No.

Example. s = [a, b, c]

t = [d. e, f]

k=6

To convert s to t. we first delete all of the characters in 3 moves. Next we add each of the characters of t in order. On the 6th move, you will have the matching string. Return Yes.

If there were more moves available, they could have been eliminated by performing multiple deletions on an empty string. If there were fewer than 6 moves, we would not have succeeded in creating the new string

input
aba
aba
7
Sample Output 1

Yes
Explanation 1

We perform 4 delete operations to reduce string s to the empty string. Recall that though the string will be empty after 3 deletions, we can still perform a delete operation on an empty string to get the empty string. Next, we perform 3 append operations (i.e., a, b, and a). Because we were able to convert s to t by performing exactly k=7 operations, we return Yes.
input
ashley
ash
2
Sample Output 2

No
Explanation 2

To convert ashley to ash a minimum of 3 steps are needed. Hence we print No as answer.
=======
def f(s1,s2,k):
    c=0
    for (i,j)in zip(s1,s2):
        if i==j:
            c+=1
        else:
            break
    l=len(s1)+len(s2)
    if (2*c+k>=l and l%2==k%2)or l<k:
        return "Yes"
    else:
        return "No"
s1=input()
s2=input()
k=int(input())
ans=f(s1,s2,k)
print(ans)
